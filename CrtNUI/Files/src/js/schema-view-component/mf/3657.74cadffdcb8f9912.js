(self.webpackChunkapp_studio_enterprise_schema_view=self.webpackChunkapp_studio_enterprise_schema_view||[]).push([[3657,7070],{3657:(F,S,c)=>{c.r(S),c.d(S,{CopilotIntentSchemaDesignerApiModule:()=>h});var C=c(74742),I=c(31134),a=c(94450),g=c(75378),o=c(98956),u=c(49475),f=c(36780),v=c(41307),s=c(21322);class _ extends o.BaseSchema{}class y{constructor(){this.caption=new u.LocalizableStringArray,this.description=new u.LocalizableStringArray}}class l extends o.BaseSchemaConverterService{constructor(t,e){super(_),this._userInfo=t,this._resourceFinderService=e,this._sysCultureName=this._userInfo.cultureInfo.sysCultureName}_convertSchemaActionToDto(t,e){return e.actions?.map(r=>({Id:r.uid,Code:r.name,Intent:{value:t},ActionType:r.actionSchemaTypeUId,Name:this._resourceFinderService.findLocalizableValue(r.caption),Description:this._resourceFinderService.findLocalizableValue(r.description),Params:r.params,PackageUId:e.package.uId}))}_convertDtoActionToSchema(t,e){const r=t.actions||[],T=e.filter(i=>r.every(n=>n.uid!==i.Id)).map(i=>{const n=new y;return n.uid=i.Id,n.name=i.Code,n.params=i.Params,n.actionSchemaTypeUId=i.ActionType,n.caption.setValueLocalizableString(this._sysCultureName,i.Name),n.description.setValueLocalizableString(this._sysCultureName,i.Description),n}),N=r.filter(i=>e.some(n=>n.Id===i.uid)).map(i=>{const n=e.find(U=>U.Id===i.uid);return i.name=n.Code,i.caption.setValueLocalizableString(this._sysCultureName,n.Name),i.description.setValueLocalizableString(this._sysCultureName,n.Description),i.params=n.Params,i.actionSchemaTypeUId=n.ActionType,i});t.actions=[...T,...N]}createSchema(t){const e=super.createSchema(t);return e.caption=new u.LocalizableStringArray(t.caption),e.description=new u.LocalizableStringArray(t.description),e.actions=t.actions?.map(r=>(r.description=new u.LocalizableStringArray(r.description),r.caption=new u.LocalizableStringArray(r.caption),r)),e}convertToSchema(t){return this.createSchema(t)}mapModelToSchema(t,e){return t.prompt=e.Prompt,t.description.setValueLocalizableString(this._sysCultureName,e.Description),t.caption.setValueLocalizableString(this._sysCultureName,e.Title),t.name=e.Code,t.status=e.Status,this._convertDtoActionToSchema(t,e.Actions),t}schemaToModel(t,e){return{UId:t,Title:this._resourceFinderService.findLocalizableValue(e.caption),Code:e.name,Description:this._resourceFinderService.findLocalizableValue(e.description),Prompt:e.prompt,Status:e.status,Actions:this._convertSchemaActionToDto(t,e),ExtendParent:e.extendParent,PackageUId:e.package.uId}}static#e=this.\u0275fac=function(e){return new(e||l)(a.\u0275\u0275inject(u.UserInfo),a.\u0275\u0275inject(u.ResourceFinderService))};static#t=this.\u0275prov=a.\u0275\u0275defineInjectable({token:l,factory:l.\u0275fac})}class p extends o.BaseDesignerApiService{constructor(t){super(t)}static#e=this.\u0275fac=function(e){return new(e||p)(a.\u0275\u0275inject(a.Injector))};static#t=this.\u0275prov=a.\u0275\u0275defineInjectable({token:p,factory:p.\u0275fac})}class d extends v.BaseCachedService{constructor(){super(),this._apiService=(0,a.inject)(p),this._convertor=(0,a.inject)(l),this._currentPackageService=(0,a.inject)(o.CurrentPackageApiService),this._serverClientOperationNotificationReceiver=(0,a.inject)(v.ServerClientOperationNotificationReceiver),this._copilotIntentChangedSubscribe()}_copilotIntentChangedSubscribe(){this._serverClientOperationNotificationReceiver.getNotifications("CopilotIntentChanged").subscribe(t=>this.deleteFromCache(t.intentUId))}_normalizeUId(t){return t.toLocaleLowerCase()}_getIntentSchema(t){return this._apiService.getSchema({schemaUId:t,useFullHierarchy:!0}).pipe((0,s.map)(e=>{if(!e.success)throw new Error(e.errorInfo?.message||`Failed to get schema with UId: ${t}`);return e.schema}),(0,s.shareReplay)({bufferSize:1,refCount:!1}),(0,s.catchError)(e=>(0,s.throwError)(()=>e)))}setToCache(t,e){super.setToCache(this._normalizeUId(t),e)}getFromCache(t){return super.getFromCache(this._normalizeUId(t))}deleteFromCache(t){return super.deleteFromCache(this._normalizeUId(t))}get(t){let e=this.getFromCache(t);return e||(e=this._getIntentSchema(t),this.setToCache(t,e)),e.pipe((0,s.map)(r=>this._convertor.schemaToModel(t,r)))}update(t){return this.getFromCache(t.UId).pipe((0,s.map)(e=>this._convertor.mapModelToSchema(e,t)),(0,s.switchMap)(e=>this._apiService.saveSchema(e)),(0,s.tap)(e=>{e.success||this.deleteFromCache(t.UId)}))}create(t){return this._currentPackageService.getDesignPackageUId(null).pipe((0,s.switchMap)(e=>this._apiService.createSchema({packageUId:e.uId,extendParent:!1,schemaUId:t})),(0,s.map)(e=>e.schema),(0,s.tap)(e=>this.setToCache(t,(0,s.of)(e))),(0,s.map)(e=>this._convertor.schemaToModel(t,e)))}static#e=this.\u0275fac=function(e){return new(e||d)};static#t=this.\u0275prov=a.\u0275\u0275defineInjectable({token:d,factory:d.\u0275fac})}let h=class m{static#e=this.\u0275fac=function(e){return new(e||m)};static#t=this.\u0275mod=a.\u0275\u0275defineNgModule({type:m});static#i=this.\u0275inj=a.\u0275\u0275defineInjector({providers:[{provide:f.COPILOT_INTENT_REPOSITORY_TOKEN,useClass:d},{provide:p,useFactory:t=>{const e=a.Injector.create({name:"CopilotIntentSchemaDesignerApiInjector",parent:t,providers:[(0,o.getSchemaDesignerApiUrlProvider)("CopilotIntentSchemaDesignerService.svc"),{provide:o.SCHEMA_DESIGNER_CONVERTER,useClass:l,deps:[u.UserInfo]},{provide:o.OPTIONS_SKIP_UNSUCCESSFUL_RESPONSE_HANDLING,useValue:!0}]});return new p(e)},deps:[a.Injector]},l],imports:[I.CommonModule,o.SchemaDesignerApiModule]})};h=(0,C.__decorate)([(0,g.CrtModule)({})],h),function(){(typeof ngJitMode>"u"||ngJitMode)&&a.\u0275\u0275setNgModuleScope(h,{imports:[I.CommonModule,o.SchemaDesignerApiModule]})}()}}]);
